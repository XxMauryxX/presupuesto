{"version":3,"sources":["components/Mensaje/Mensaje.jsx","components/Pregunta/Pregunta.jsx","components/Formulario/Formulario.jsx","components/Listado/Gasto.jsx","components/Listado/Listado.jsx","helpers.js","components/ControlPresupuesto/ControlPresupuesto.jsx","App.js","serviceWorker.js","index.js"],"names":["Mensaje","mensajeError","className","Pregunta","setPresupuesto","setRestante","setValidar","useState","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setcrearGasto","restante","nombre","setNombre","setCantida","errorRestante","seterrorRestante","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","key","revisarPresupuesto","presupuesto","ControlPresupuesto","App","validar","setGastos","crearGasto","useEffect","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ffd145c9.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Mensaje = ({ mensajeError }) => {\r\n  return (\r\n    <Fragment>\r\n      <p className=\"alert alert-danger error\">{mensajeError}</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMensaje.propTypes = {\r\n  mensajeError: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Mensaje;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Mensaje from \"../Mensaje/Mensaje\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pregunta = ({ setPresupuesto, setRestante, setValidar }) => {\r\n  // Definir State cantidad:\r\n  const [cantidad, setCantidad] = useState(0);\r\n\r\n  // Definir State para errores:\r\n  const [error, setError] = useState(false);\r\n\r\n  // Función que lee el presupuesto:\r\n  const definirPresupuesto = (e) => {\r\n    setCantidad(parseInt(e.target.value), 10);\r\n  };\r\n\r\n  // Submit para definir el presupuesto:\r\n  const agregarPresupuesto = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validar:\r\n    if (cantidad <= 0 || isNaN(cantidad)) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    // Si se pasa la validación:\r\n    setError(false);\r\n    setPresupuesto(cantidad);\r\n    setRestante(cantidad);\r\n    setValidar(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2> Coloca tu presupuesto </h2>\r\n      {error ? <Mensaje mensajeError=\"El presupuesto es incorrecto\" /> : null}\r\n      <form onSubmit={agregarPresupuesto}>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Coloca tu presupuesto\"\r\n          onChange={definirPresupuesto}\r\n        />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Definir presupuesto\"\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPregunta.propTypes = {\r\n  setPresupuesto: PropTypes.func.isRequired,\r\n  setRestante: PropTypes.func.isRequired,\r\n  setValidar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pregunta;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport Mensaje from \"../Mensaje/Mensaje\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Formulario = ({ setGasto, setcrearGasto, restante }) => {\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [cantidad, setCantida] = useState(0);\r\n  const [error, setError] = useState(false);\r\n  const [errorRestante, seterrorRestante] = useState(false);\r\n\r\n  const agregarNombre = (e) => {\r\n    return setNombre(e.target.value);\r\n  };\r\n  const agregarCantidad = (e) => {\r\n    return setCantida(parseInt(e.target.value));\r\n  };\r\n\r\n  const ingresarDatos = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (restante < 0) {\r\n      seterrorRestante(true);\r\n      return;\r\n    }\r\n\r\n    if (cantidad <= 0 || isNaN(cantidad) || nombre.trim() === \"\") {\r\n      // Validar:\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    // Construir el gasto:\r\n    const gasto = {\r\n      nombre,\r\n      cantidad,\r\n      id: shortid.generate(),\r\n    };\r\n\r\n    // Pasar el gasto al componente principal:\r\n    setGasto(gasto);\r\n    setcrearGasto(true);\r\n\r\n    // Resetear el Form:\r\n    setNombre(\"\");\r\n    setCantida(0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={ingresarDatos}>\r\n        <h2> Agrega tus gastos aquí </h2>\r\n        {errorRestante ? (\r\n          <Mensaje mensajeError=\"Oye bro!! Creo que ya te pasaste\" />\r\n        ) : null}\r\n\r\n        {error ? (\r\n          <Mensaje mensajeError=\"Ambos campos son obligatorios o el presupuesto esta incorrecto\" />\r\n        ) : null}\r\n        <div className=\"campo\">\r\n          <label>Nombre gasto:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"u-full-width\"\r\n            placeholder=\"Ej. Transporte\"\r\n            onChange={agregarNombre}\r\n            value={nombre}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"campo\">\r\n          <label>Cantidad gasto:</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"u-full-width\"\r\n            placeholder=\"Ej. 300\"\r\n            onChange={agregarCantidad}\r\n            value={cantidad}\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Agregar gasto\"\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nFormulario.propTypes = {\r\n  setGasto: PropTypes.func.isRequired,\r\n  setcrearGasto: PropTypes.func.isRequired,\r\n  restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Formulario;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Gasto = ({ gasto }) => {\r\n  return (\r\n    <li>\r\n      <p>\r\n        {gasto.nombre}\r\n        <span className=\"gasto\"> ${gasto.cantidad}</span>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nGasto.propTypes = {\r\n  gasto: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Gasto;\r\n","import React from \"react\";\r\nimport Gasto from \"./Gasto\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Listado = ({ gastos }) => {\r\n  return (\r\n    <div className=\"gastos-realizados\">\r\n      <h2> Listado: </h2>\r\n      {gastos.map((gasto) => {\r\n        return <Gasto key={gasto.id} gasto={gasto} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nListado.propTypes = {\r\n  gastos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Listado;\r\n","export const revisarPresupuesto = (presupuesto, restante) => {\r\n  let clase;\r\n\r\n  if (presupuesto / 4 > restante) {\r\n    clase = \"alert alert-danger\";\r\n  } else if (presupuesto / 2 > restante) {\r\n    clase = \"alert alert-warning\";\r\n  } else {\r\n    clase = \"alert alert-success\";\r\n  }\r\n\r\n  return clase;\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { revisarPresupuesto } from \"../../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ControlPresupuesto = ({ presupuesto, restante }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"alert alert-primary\">Presupuesto: {presupuesto}</div>\r\n\r\n      <div className={revisarPresupuesto(presupuesto, restante)}>\r\n        Restante: {restante}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nControlPresupuesto.propTypes = {\r\n  presupuesto: PropTypes.number.isRequired,\r\n  restante: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ControlPresupuesto;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Pregunta from \"./components/Pregunta/Pregunta.jsx\";\r\nimport Formulario from \"./components/Formulario/Formulario.jsx\";\r\nimport Listado from \"./components/Listado/Listado.jsx\";\r\nimport ControlPresupuesto from \"./components/ControlPresupuesto/ControlPresupuesto.jsx\";\r\n\r\nfunction App() {\r\n  // Definir los State:\r\n  const [presupuesto, setPresupuesto] = useState(0);\r\n  const [restante, setRestante] = useState(0);\r\n  const [validar, setValidar] = useState(true);\r\n  const [gastos, setGastos] = useState([]);\r\n  const [gasto, setGasto] = useState({});\r\n  const [crearGasto, setcrearGasto] = useState(false);\r\n\r\n  // UseEffect que actualiza el restante:\r\n  useEffect(() => {\r\n    if (crearGasto) {\r\n      setGastos([...gastos, gasto]);\r\n\r\n      // Resta del presupuesto actual:\r\n      const presupuestoRestante = restante - gasto.cantidad;\r\n      setRestante(presupuestoRestante);\r\n\r\n      // Resetear el False:\r\n      setcrearGasto(false);\r\n    }\r\n  }, [gasto, crearGasto, gastos, restante]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        <header>\r\n          <h1> Gasto semanal</h1>\r\n        </header>\r\n        <div className=\"contenido-principal contenido\">\r\n          {validar ? (\r\n            <Pregunta\r\n              setPresupuesto={setPresupuesto}\r\n              setRestante={setRestante}\r\n              setValidar={setValidar}\r\n            />\r\n          ) : (\r\n            <div className=\"row\">\r\n              <div className=\"one-half column\">\r\n                <Formulario\r\n                  setGasto={setGasto}\r\n                  setcrearGasto={setcrearGasto}\r\n                  restante={restante}\r\n                />\r\n              </div>\r\n              <div className=\"one-half column\">\r\n                <Listado gastos={gastos} />\r\n\r\n                <ControlPresupuesto\r\n                  presupuesto={presupuesto}\r\n                  restante={restante}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}